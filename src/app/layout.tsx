// import type { Metadata } from "next";
// import { Geist, Geist_Mono } from "next/font/google";
// import "./globals.css";
// import Providers from "./Providers";
// import '@rainbow-me/rainbowkit/styles.css';
// import { cookieToWeb3AuthState } from "@web3auth/modal";
// import { headers } from "next/headers";

// export const experimental_ppr = true

// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// export default async function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) {

//   // const headersList = await headers();
//   // const web3authInitialState = cookieToWeb3AuthState(headersList.get('cookie'));

//   return (
//     <html lang="en">
//       <body
//         className={`${geistSans.variable} ${geistMono.variable} antialiased`}
//         suppressHydrationWarning={true}
//       >
//         {/* {children} */}
//         <Providers>{children}</Providers>
//       </body>
//     </html>
//   );
// }



// import './globals.css';

// export default function RootLayout({ children }: { children: React.ReactNode }) {
//   return (
//     <html lang="en">
//       <body>
//         <Providers>
//           {children}
//         </Providers>
//       </body>
//     </html>
//   );
// }


// 'use client';

// import { ReactNode } from 'react';
// import { WagmiProvider } from 'wagmi';
// import { RainbowKitProvider } from '@rainbow-me/rainbowkit';
// import { QueryClient, QueryClientProvider } from '@tanstack/react-query';
// import { config, chains } from '@/utils/wagmi';
// import { SolanaProvider } from './Providers';

// const queryClient = new QueryClient(); // ðŸ‘ˆ create QueryClient instance

// export default function RootLayout({ children }: { children: ReactNode }) {
//   return (
//     <QueryClientProvider client={queryClient}>
//       <WagmiProvider config={config}>
//         <RainbowKitProvider chains={chains}>
//           <SolanaProvider>
//             {children}
//           </SolanaProvider>
//         </RainbowKitProvider>
//       </WagmiProvider>
//     </QueryClientProvider>
//   );
// }


import "./globals.css";
import "@solana/wallet-adapter-react-ui/styles.css";
import { SolanaProvider } from './Providers';

export default function RootLayout({
  children
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html>
      <body suppressHydrationWarning={true}>
        <SolanaProvider>{children}</SolanaProvider>
      </body>
    </html>
  );
}